version: "3.9"

services:
  {{ cookiecutter.service_slug }}:
    build:
      args:
        USER: ${USER:-appuser}
      context: .
      target: ${{ "{" }}{{ cookiecutter.service_slug|upper }}_BUILD_TARGET:-test}
    image: ${{ "{" }}{{ cookiecutter.service_slug|upper }}_IMAGE_NAME:-{{ cookiecutter.project_slug }}_{{ cookiecutter.service_slug }}}:${{ "{" }}{{ cookiecutter.service_slug|upper }}_IMAGE_TAG:-latest}
    depends_on:
      postgres:
        condition: service_healthy{% if cookiecutter.local_s3_storage == "true" %}
      minio:
        condition: service_healthy{% endif %}
    environment:
      - CACHE_URL
      - DATABASE_URL=${DATABASE_URL:-postgres://postgres:postgres@postgres:5432/{{ cookiecutter.project_slug }}}
      - DJANGO_ADMINS
      - DJANGO_ALLOWED_HOSTS{% if "s3" in cookiecutter.media_storage %}
      - DJANGO_AWS_S3_URL{% endif %}
      - DJANGO_CONFIGURATION=${DJANGO_CONFIGURATION:-Testing}
      - DJANGO_DEBUG
      - DJANGO_DEFAULT_FROM_EMAIL
      - DJANGO_SECRET_KEY
      - DJANGO_SERVER_EMAIL
      - DJANGO_SESSION_COOKIE_DOMAIN
      - DJANGO_SUPERUSER_EMAIL
      - DJANGO_SUPERUSER_PASSWORD
      - DJANGO_SUPERUSER_USERNAME
      - EMAIL_URL
      - INTERNAL_SERVICE_PORT=${INTERNAL_SERVICE_PORT:-8000}
      - PACT_BROKER_URL
      - PACT_PROVIDER_NAME
      - PYTHONBREAKPOINT
    ports:
      - "${{ '{' }}{{ cookiecutter.service_slug|upper }}_PORT:-{{ cookiecutter.internal_service_port }}{{ '}' }}:${INTERNAL_SERVICE_PORT:-{{ cookiecutter.internal_service_port }}{{ '}' }}"
    user: ${USER:-appuser}{% if cookiecutter.local_s3_storage == "true" %}
    networks:
      custom:
        ipv4_address: 172.20.0.10{% endif %}

  postgres:
    environment:
      - POSTGRES_DB={{ cookiecutter.project_slug }}
      - POSTGRES_INITDB_ARGS=--no-sync
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 3s
      timeout: 3s
      retries: 30
    image: postgres:14-bullseye
    volumes:
      - pg_data:/var/lib/postgresql/data{% if cookiecutter.local_s3_storage == "true" %}
    networks:
      custom:
        ipv4_address: 172.20.0.11

  minio:
    command: minio server /var/lib/minio/data --console-address ":9001"
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_BUCKET_NAME={{ cookiecutter.project_slug }}
      - MINIO_ROOT_USER=minio-admin
      - MINIO_ROOT_PASSWORD=minio-admin
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 3s
      timeout: 3s
      retries: 30
    image: minio/minio:RELEASE.2024-01-31T20-20-33Z
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/var/lib/minio/data
    networks:
      custom:
        ipv4_address: 172.20.0.13{% endif %}

volumes:
  pg_data: {}{% if cookiecutter.local_s3_storage == "true" %}
  minio_data: {}

networks:
  custom:
    ipam:
      config:
      - subnet: 172.20.0.0/16{% endif %}
